#################################################################################
#   Onebranch Pipelines - Official MSBuild (CDPXMigrated)                       #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none # https://aka.ms/obpipelines/triggers

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 1
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  NUGET_XMLDOC_MODE: skip
  ${{ if eq(variables['Build.DefinitionName'], 'powerbi-jupyter-Official') }}:
    obpTemplate: v2/OneBranch.Official.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  ${{ else }}:
    obpTemplate: v2/OneBranch.NonOfficial.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates

  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2022:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: ${{ variables.obpTemplate }}
  parameters:
    globalSdl:
      tsa:
        enabled: false
      cg:
        failOnAlert: false

    stages:
    - stage: build
      jobs:
      - job: main
        pool:
          type: windows  # read more about custom job pool types at https://aka.ms/obpipelines/yaml/jobs

        variables:
          ob_outputDirectory: '$(OUTPUTROOT)' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
          ob_sdl_binskim_break: true # https://aka.ms/obpipelines/sdl
          ob_artifactBaseName: 'drop'
          ob_sdl_cg_failOnAlert: false
          ob_sdl_codeSignValidation_excludes: 'regex|.+(?:exe|dll)$;-|*.nd.dll;-|.gdn\**;-:file|**\*.js'

        steps:
          # Custom Versioning - we will build the version using package.json in versioning commands.
          - task: PowerShell@2
            displayName: 'Set Version'
            inputs:
              targetType: 'filePath'
              filePath: '$(Build.SourcesDirectory)\.pipelines\version.ps1'
              workingDirectory: '$(Build.SourcesDirectory)'

          # Add the versioning task after running Version script
          - task: onebranch.pipeline.version@1
            inputs:
              system: 'Custom'
              customVersion: '$(CustomBuildNumber)'

          - task: npmAuthenticate@0
            displayName: 'NPM Authenticate'
            inputs:
              workingFile: '$(Build.SourcesDirectory)\.npmrc'

          - task: PipAuthenticate@1
            inputs:
              artifactFeeds: 'Embedded/Embedded_PublicPackages'

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.9.7'

          - task: PowerShell@2
            displayName: 'Restore'
            inputs:
              targetType: 'filePath'
              filePath: '$(Build.SourcesDirectory)\.pipelines\restore.ps1'
              workingDirectory: '$(Build.SourcesDirectory)'

          - task: PowerShell@2
            displayName: 'Build'
            inputs:
              targetType: 'filePath'
              filePath: '$(Build.SourcesDirectory)\.pipelines\build.ps1'
              workingDirectory: '$(Build.SourcesDirectory)'

          # Copying build artifacts to the Output folder
          - task: CopyFiles@2
            displayName: 'Copy Dist to Output folder'
            inputs:
              SourceFolder: $(Build.SourcesDirectory)
              Contents: |
                dist\*
                LICENSE.txt
                package.json
                README.md
                powerbiclient\nbextension\static\*.*
                !dist\*.whl
              TargetFolder: '$(OUTPUTROOT)\outputs\build\build_artifacts'

          # Copying source artifacts to the Output folder
          - task: CopyFiles@2
            displayName: 'Copy Source to Output folder'
            inputs:
              SourceFolder: $(Build.SourcesDirectory)
              Contents: |
                **\*
                !**\__pycache__\**\*
                !.pipelines\*
                !dist\*
                !lib\*
                !demo\*
                !build\**\*
                !node_modules\**\*
                !tests\**\*
                !powerbiclient\tests\*
                !out\**\*
              TargetFolder: '$(OUTPUTROOT)\outputs\build\source'

          - task: PowerShell@2
            displayName: 'Package'
            inputs:
              targetType: 'filePath'
              filePath: '$(Build.SourcesDirectory)\.pipelines\package.ps1'
              workingDirectory: '$(Build.SourcesDirectory)'

          - task: PowerShell@2
            displayName: 'Test powerbi-jupyter'
            inputs:
              targetType: 'filePath'
              filePath: '$(Build.SourcesDirectory)\.pipelines\test.ps1'
              workingDirectory: '$(Build.SourcesDirectory)'

          # Copying tgz package and whl to Output folder
          - task: CopyFiles@2
            displayName: 'Copy tgz package and whl file to Output folder'
            inputs:
              SourceFolder: $(Build.SourcesDirectory)
              Contents: |
                dist\*.whl
                **\*.tgz
                !out\**\*
              TargetFolder: '$(OUTPUTROOT)\outputs\package\Release'

          - task: onebranch.pipeline.signing@1
            displayName: 'Sign buildartifacts binaries'
            inputs:
              command: 'sign'
              signing_environment: 'azure-ado'
              signing_profile: 'external_distribution'
              files_to_sign: '**'
              search_root: '$(OUTPUTROOT)'
